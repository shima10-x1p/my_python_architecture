openapi: 3.0.3
info:
  description: |
    シンプルなToDoアプリのバックエンドAPI仕様
  title: ToDo App API
  version: 1.0.0
servers:
- url: http://localhost:8000
paths:
  /tasks:
    get:
      operationId: listTasks
      parameters:
      - description: タイトルで部分一致検索
        explode: true
        in: query
        name: title
        required: false
        schema:
          type: string
        style: form
      - description: 完了フラグで絞り込み
        explode: true
        in: query
        name: is_done
        required: false
        schema:
          type: boolean
        style: form
      - description: 作成日(開始)で絞り込み (ISO8601形式)
        explode: true
        in: query
        name: created_from
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: 作成日(終了)で絞り込み (ISO8601形式)
        explode: true
        in: query
        name: created_to
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Task'
                type: array
          description: タスク一覧
      summary: タスク一覧を取得
      tags:
      - Task
    post:
      operationId: createTask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskCreate'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: 作成されたタスク
      summary: 新しいタスクを作成
      tags:
      - Task
  /tasks/{task_id}:
    delete:
      operationId: deleteTask
      parameters:
      - explode: false
        in: path
        name: task_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: タスク削除成功
        "404":
          description: タスクが見つかりません
      summary: タスクを削除
      tags:
      - Task
    get:
      operationId: getTask
      parameters:
      - explode: false
        in: path
        name: task_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: タスク詳細
        "404":
          description: タスクが見つかりません
      summary: タスク詳細を取得
      tags:
      - Task
    put:
      operationId: updateTask
      parameters:
      - explode: false
        in: path
        name: task_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskUpdate'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: 更新されたタスク
        "404":
          description: タスクが見つかりません
      summary: タスクを更新
      tags:
      - Task
components:
  schemas:
    Task:
      example:
        is_done: false
        updated_at: 2000-01-23T04:56:07.000+00:00
        description: 牛乳とパンを買う
        created_at: 2000-01-23T04:56:07.000+00:00
        id: b3b8c7e2-8c2a-4e2a-9b2a-1a2b3c4d5e6f
        title: 買い物に行く
      properties:
        id:
          example: b3b8c7e2-8c2a-4e2a-9b2a-1a2b3c4d5e6f
          format: uuid
          title: id
          type: string
        title:
          example: 買い物に行く
          title: title
          type: string
        description:
          example: 牛乳とパンを買う
          title: description
          type: string
        is_done:
          example: false
          title: is_done
          type: boolean
        created_at:
          format: date-time
          title: created_at
          type: string
        updated_at:
          format: date-time
          title: updated_at
          type: string
      required:
      - created_at
      - id
      - is_done
      - title
      - updated_at
      title: Task
      type: object
    TaskCreate:
      example:
        description: 小説を1冊読む
        title: 本を読む
      properties:
        title:
          example: 本を読む
          title: title
          type: string
        description:
          example: 小説を1冊読む
          title: description
          type: string
      required:
      - title
      title: TaskCreate
      type: object
    TaskUpdate:
      example:
        is_done: true
        description: description
        title: title
      properties:
        title:
          title: title
          type: string
        description:
          title: description
          type: string
        is_done:
          title: is_done
          type: boolean
      title: TaskUpdate
      type: object
